Phase: tresors_details
Input: Token Collections Tresors Trouvailles PeriodeEmission NatureMonnaie ANgazetier
Options: control = appelt

//Règles
Rule: TresorsDetails
(
    ({Tresors})
    (({Token,!Collections,!Trouvailles,!PeriodeEmission,!NatureMonnaie,! ANgazetier.majorType == "ateliers"})+):ad
    ({Collections}|{Trouvailles}|{ANgazetier.majorType == "ateliers"}|{PeriodeEmission}|{Token.kind =="number"}{NatureMonnaie})
    )
-->
: ad{
        //En entree
   OffsetComparator comparator            = new OffsetComparator();

   gate.AnnotationSet matchedTresors  = (gate.AnnotationSet)bindings.get("ad");
   List<Annotation>   listCoTresors     = new ArrayList<Annotation>(matchedTresors);

   Collections.sort(listCoTresors, comparator);

   String tresors = "";

            //On récupere chaque token séparés par les expaces
   for (Annotation ann :  listCoTresors) {
      tresors += (String)ann.getFeatures().get("string");
  }

            //declaration d'annotation vide
  gate.AnnotationSet matchedInter    = (gate.AnnotationSet)bindings.get("ad");
  gate.FeatureMap newFeatures        = Factory.newFeatureMap();
            //MAJ de l'annotation initialement vide
  newFeatures.put("Kind","tresors");
  newFeatures.put("Rule","TresorsDetails");
  newFeatures.put("Details",tresors);

            //Validation de l'annotation et sortie
  outputAS.add(matchedInter.firstNode(),matchedInter.lastNode(),"TresorsDetails",newFeatures);
}

